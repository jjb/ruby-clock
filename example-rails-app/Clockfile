using RubyClock::DSL

load '../example-app/Clockfile'

every('2 seconds') do
  puts Example.count
end

every('2 seconds') do
  if defined?(schedule)
    raise "ðŸ’¥ we do not expect schedule to be available inside a job, but it is"
  end
  puts Example.check_for_global_method
end

every('2 seconds') do
  if defined?(shell) || defined?(rake)
    puts "ðŸ’¥ we do not expect runners to be available inside a job, but it is"
  end
  puts Example.check_for_runner
end

every('2 seconds') do
  RubyClock::Runners.rake 'about'
end
